spring:
  application:
    name: pi
  cloud:
    kubernetes:
      config:
        sources:
          - name: ${spring.application.name}
          - name: default
    stream:
      bindings:
        input:
          destination: asrevo.ihear.pi.ws
          contentType: application/json
          group: ${random.uuid}
        output:
          destination: asrevo.ihear.pi.ws
          contentType: application/json
      rabbit:
        bindings:
          input:
            consumer:
              exchangeType: fanout
              durableSubscription: false
              acknowledgeMode: NONE
          output:
            producer:
              exchangeType: fanout
              durableSubscription: false
              acknowledgeMode: NONE
  data:
    mongodb:
      database: ihear
  security:
    oauth2:
      client:
        registration:
          micro:
            provider: auth
            client-id: micro
            client-secret: revo
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: client_credentials
            scope: read,write
        provider:
          auth:
            authorization-uri: http://${org.revo.base.env.url:localhost:8080}/auth/oauth/authorize
            #            authorization-uri: http://${org.revo.base.env.url:10.0.2.2:8080}/auth/oauth/authorize
            #            token-uri: http://${org.revo.base.env.url:localhost:8080}/auth/oauth/token
            token-uri: http://${org.revo.base.env.url:localhost:9999}/auth/oauth/token
            user-info-uri: http://${org.revo.base.env.url:localhost:8080}/auth/user
            user-name-attribute: sub
            jwk-set-uri: http://${org.revo.base.env.url:localhost:8080}/auth/.well-known/jwks.json
      resourceserver:
        jwt:
          jwk-set-uri: http://${org.revo.base.env.url:localhost:8080}/auth/.well-known/jwks.json
management:
  endpoints:
    web:
      exposure:
        include: ["*"]
  endpoint:
    health:
      show-details: always
server:
  port: 8082
logging:
  level:
    org: debug
    com: debug
    reactor: debug
    io: debug
  file:
    name: logs/${spring.application.name}.log